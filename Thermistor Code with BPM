// Peak Counter 
int threshold = 25;//threshold value for detecting peaks
int peakCount = 0; // counter for number of peaks detected
int lastSignal = 0; //Variable for storing the last signal 
unsigned long startTime = 0;

//BPM Code 
int x = 0;
int LastTime = 0;
bool BPMTiming = false;
bool BeatComplete = false;
int BPM = 0;    
#define UpperThreshold 25.3 // 24.5 // Threshold above which the signal is considered a breath
#define LowerThreshold 25.0   // 24 for normal //Threshold below which a breath is considered complete 
int LED13 = 44; // The on-board Arduino LED
int Signal; // holds the incoming raw data. Signal value can range from 0-1024
int caution;

//Thermistor Code 
//time
unsigned long myTime;

//Thermistor Definitions
// which analog pin to connect
#define THERMISTORPIN A2         
// resistance at 25 degrees C
#define THERMISTORNOMINAL 10000      
// temp. for nominal resistance (almost always 25 C)
#define TEMPERATURENOMINAL 23.333 //22.78  
// how many samples to take and average, more takes longer
// but is more 'smooth'
#define NUMSAMPLES 3
// The beta coefficient of the thermistor (usually 3000-4000)
#define BCOEFFICIENT 3950
// the value of the 'other' resistor
#define SERIESRESISTOR 10000   


int samples[NUMSAMPLES];

void setup(void) {
  Serial.begin(9600);
}

void loop(void) {
  uint8_t i;
  float average;

  // take N samples in a row, with a slight delay
  for (i=0; i< NUMSAMPLES; i++) {
   samples[i] = analogRead(THERMISTORPIN);
  }
  
//   average all the samples out
 average = 0;
  for (i=0; i< NUMSAMPLES; i++) {
    average += samples[i];
    delay(2);
  }
 average /= NUMSAMPLES;

  //Serial.print("Average analog reading "); 
  //Serial.println(average);
  
  // convert the value to resistance
  average = 1023 / average - 1;
  average = SERIESRESISTOR / average;
  //Serial.print("Thermistor resistance "); 
  //Serial.println(average);
  
  float steinhart;
  steinhart = average / THERMISTORNOMINAL;     // (R/Ro)
  steinhart = log(steinhart);                  // ln(R/Ro)
  steinhart /= BCOEFFICIENT;                   // 1/B * ln(R/Ro)
  steinhart += 1.0 / (TEMPERATURENOMINAL + 273.15); // + (1/To)
  steinhart = 1.0 / steinhart ;                 // Invert
  steinhart -= 273.15;                         // convert absolute temp to C
  
  //Serial.print("Temperature "); 
  myTime = millis();
  Serial.print(myTime);
  Serial.print("; ");

  Serial.print(steinhart);
 // Serial.println(" *C");
  //delay(1);

int value = steinhart;
  if (value > UpperThreshold) {
    if (BeatComplete) {
      BPM = millis() - LastTime;
      BPM = int(60 / (float(BPM) / 1000));
      BPMTiming = false;
      BeatComplete = false;
    }
    if (BPMTiming == false) {
      LastTime = millis();
      BPMTiming = true;
    }
  }
  if ((value < LowerThreshold) & (BPMTiming))
    BeatComplete = true;
    // display bpm
    Serial.print("; ");
    Serial.print(BPM);
    Serial.println(" BPM");
}
